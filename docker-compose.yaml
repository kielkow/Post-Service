version: '3'

services:
  app:
    build: .
    container_name: app
    entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
    environment:
      - DB_HOST=db
      - DB_DATABASE=mysql
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - AWS_S3_REGION=aws-region
      - AWS_S3_BUCKET=mybucket
      - AWS_SES_SENDER=example@example.com
      - JWT_APP_SECRET=mysupersecretphrase
    volumes:
      - .:/home/go/api
    networks: 
      - app-network
    depends_on:
      - db
      - redis

  nginx:
    build: .docker/nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "8080:80"
    volumes:
      - .:/home/go/api
    networks: 
      - app-network
    depends_on:
      - app
  
  db:
    build: .docker/mysql
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/dbdata:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=post_services
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks: 
      - app-network
  
  redis:
    image: redis:alpine
    expose:
      - 6379
    networks: 
      - app-network

networks:
  app-network:
    driver: bridge